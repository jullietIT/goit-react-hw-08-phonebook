{"version":3,"file":"static/js/51.80c38362.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/App.styled.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const WrapperForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 300px;\n  height: 250px;\n  border: 2px solid #000;\n  border-radius: 10px;\n  margin: 100px auto 10px;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  text-align: center;\n  font-weight: 700;\n`;\nexport const Input = styled.input`\n  display: block;\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const Button = styled.button`\n  min-width: 150px;\n  padding: 4px 12px;\n  margin-top: 10px;\n  border: 1px solid #000;\n  border-radius: 6px;\n  text-transform: capitalize;\n  cursor: pointer;\n  text-transform: capitalize;\n\n  cursor: pointer;\n  :hover,\n  :focus {\n    background-color: yellow;\n    color: black;\n  }\n`;\n\nexport const Title = styled.h1`\n  display: flex;\n  justify-content: center;\n  color: blue;\n  font-size: 40px;\n  margin-top: -80px;\n`;\n","// export const selectLoading = state => state.contacts.loading;\n\n// export const selectFilter = state => state.contacts.filter;\n\n// export const selectAllContacts = state => state.contacts.items;\n\nexport const getContacts = state => state.contacts.contacts;\nexport const getFilter = state => state.filter.status;\n//new\n// export const getTasks = state => state.tasks.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n","import { useState } from 'react';\nimport { WrapperForm, Label, Input, Button, Title } from './ContactForm.styled';\nimport { getContacts } from '../../redux/contacts/selectors';\n// Импортируем хук\nimport { useDispatch, useSelector } from 'react-redux';\n// Импортируем генератор экшена\n//\nimport { addContacts } from '../../redux/contacts/operations';\n\nexport const ContactForm = () => {\n  // Получаем ссылку на функцию отправки экшенов\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n  const contacts = useSelector(getContacts);\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      alert(`${name} is already in contacts`);\n    } else {\n      dispatch(addContacts({ name, number }));\n    }\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <WrapperForm>\n      <Title>Phonebook</Title>\n      <form onSubmit={handleSubmit}>\n        <Label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя должно состоять из букв, заглавных\"\n            required\n          />\n        </Label>\n        <Label>\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            value={number}\n            onChange={handleChange}\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          />\n        </Label>\n\n        <Button type=\"submit\">Add contact</Button>\n      </form>\n    </WrapperForm>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ListContact = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  align-content: center;\n  margin: 10px;\n  gap: 6px;\n  width: 500px;\n  text-align: center;\n  list-style: none;\n  margin: 0 auto;\n`;\n\nexport const Button = styled.button`\n  min-width: 80px;\n  padding: 4px 12px;\n  margin-top: 10px;\n  margin-left: 20px;\n  border: 1px solid #000;\n  border-radius: 6px;\n  text-transform: capitalize;\n  cursor: pointer;\n  :hover,\n  :focus {\n    background-color: yellow;\n    color: black;\n  }\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContacts, fetchContacts } from '../../redux/contacts/operations';\nimport {\n  getContacts,\n  getFilter,\n  getIsLoading,\n  getError,\n} from 'redux/contacts/selectors.js';\nimport { useEffect } from 'react';\nimport { ListContact, Button } from './ContactList.styled';\n\nconst ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filters = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLocaleLowerCase().includes(filters.toLowerCase())\n  );\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ListContact>\n      {isLoading && !error && <p>Request in progress...</p>}\n      {error && <p></p>}\n      {visibleContacts.map(({ id, name, number }) => (\n        <li key={id}>\n          {name}: {number}\n          <Button type=\"button\" onClick={() => dispatch(deleteContacts(id))}>\n            delete\n          </Button>\n        </li>\n      ))}\n    </ListContact>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n\n  align-items: center;\n  flex-direction: column;\n  \n`;\n\nexport const Title2 = styled.h2`\n  display: flex;\n  justify-content: center;\n  color: blue;\n  font-size: 36px;\n`;\n\nexport const Title = styled.h3`\n  display: flex;\n  justify-content: center;\n  margin: 10px 10px;\n`;\n","import React from 'react';\nimport { FilterWrapper, Title, Title2 } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setStatusFilter } from '../redux/filtersSlice';\nimport { nanoid } from 'nanoid';\nimport { getFilter } from '../../redux/contacts/selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filters = useSelector(getFilter);\n  const filterId = nanoid(3);\n\n  const handleChange = e => {\n    dispatch(setStatusFilter(e.target.value)); //передаємо значення у фільтрі\n  };\n  return (\n    <FilterWrapper htmlFor={filterId}>\n      <Title2>Contacts</Title2>\n      <Title>Find contact by name</Title>\n      <label>\n        <input\n          type=\"text\"\n          id={filterId}\n          value={filters}\n          onChange={handleChange}\n        />\n      </label>\n    </FilterWrapper>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  border: 1px solid black;\n  width: 500px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  border-radius: 10px;\n  margin-left: auto;\n  margin-right: auto;\n  box-shadow: rgb(0 1 0) 5px 5px 15px 5px;\n  height: auto;\n  text-align: center;\n  margin-top: 10px;\n  border: 4mm ridge rgba(211, 220, 50, 0.6);\n`;\n","import { ContactForm } from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\n\nimport { Wrapper } from '../components/App.styled';\n\nexport default function Contacts() {\n  return (\n    <>\n      <Wrapper>\n        <ContactForm />\n        <Filter />\n        <ContactList />\n      </Wrapper>\n    </>\n  );\n}\n"],"names":["WrapperForm","styled","Label","Input","Button","Title","getContacts","state","contacts","getFilter","filter","status","getIsLoading","isLoading","getError","error","ContactForm","dispatch","useDispatch","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","useSelector","onSubmit","event","preventDefault","some","contact","toLowerCase","alert","addContacts","type","onChange","pattern","title","required","ListContact","filters","visibleContacts","toLocaleLowerCase","includes","useEffect","fetchContacts","map","id","onClick","deleteContacts","FilterWrapper","Title2","filterId","nanoid","htmlFor","setStatusFilter","target","Wrapper","Contacts"],"sourceRoot":""}