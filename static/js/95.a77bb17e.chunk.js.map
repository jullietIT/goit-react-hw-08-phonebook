{"version":3,"file":"static/js/95.a77bb17e.chunk.js","mappings":"uOAMaA,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASA,QAAnB,EACnBC,EAAY,SAAAF,GAAK,OAAIA,EAAMG,OAAOC,MAAjB,EAIjBC,EAAe,SAAAL,GAAK,OAAIA,EAAMC,SAASK,SAAnB,EAEpBC,EAAW,SAAAP,GAAK,OAAIA,EAAMC,SAASO,KAAnB,E,mBCXhBC,EAAcC,EAAAA,GAAAA,GAAH,qOAaXC,EAASD,EAAAA,GAAAA,OAAH,gS,SC2BnB,EA9BoB,WAClB,IAAMT,GAAWW,EAAAA,EAAAA,IAAYb,GACvBc,GAAUD,EAAAA,EAAAA,IAAYV,GACtBY,GAAWC,EAAAA,EAAAA,MACXT,GAAYM,EAAAA,EAAAA,IAAYP,GACxBG,GAAQI,EAAAA,EAAAA,IAAYL,GAEpBS,EAAkBf,EAASE,QAAO,SAAAc,GAAO,OAC7CA,EAAQC,KAAKC,oBAAoBC,SAASP,EAAQQ,cADL,IAO/C,OAJAC,EAAAA,EAAAA,YAAU,WACRR,GAASS,EAAAA,EAAAA,MACV,GAAE,CAACT,KAGF,UAACL,EAAD,WACGH,IAAcE,IAAS,kDACvBA,IAAS,iBACTQ,EAAgBQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIP,EAAP,EAAOA,KAAMQ,EAAb,EAAaA,OAAb,OACnB,0BACGR,EADH,KACWQ,GACT,SAACf,EAAD,CAAQgB,KAAK,SAASC,QAAS,kBAAMd,GAASe,EAAAA,EAAAA,IAAeJ,GAA9B,EAA/B,sBAFOA,EADU,MAU1B,ECtCYK,EAAgBpB,EAAAA,GAAAA,IAAH,+HASbqB,EAASrB,EAAAA,GAAAA,GAAH,0GAONsB,EAAQtB,EAAAA,GAAAA,GAAH,4F,oBCalB,EAxBe,WACb,IAAMI,GAAWC,EAAAA,EAAAA,MACXF,GAAUD,EAAAA,EAAAA,IAAYV,GACtB+B,GAAWC,EAAAA,EAAAA,IAAO,GAKxB,OACE,UAACJ,EAAD,CAAeK,QAASF,EAAxB,WACE,SAACF,EAAD,wBACA,SAACC,EAAD,oCACA,4BACE,kBACEL,KAAK,OACLF,GAAIQ,EACJG,MAAOvB,EACPwB,SAZa,SAAAC,GACnBxB,GAASyB,EAAAA,EAAAA,GAAgBD,EAAEE,OAAOJ,OACnC,QAeF,EC3BYK,EAAU/B,EAAAA,GAAAA,IAAH,kYCIL,SAASgC,IACtB,OACE,+BACE,UAACD,EAAD,YACE,SAAC,EAAD,KACA,SAAC,EAAD,KACA,SAAC,EAAD,QAIP,C","sources":["redux/contacts/selectors.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/App.styled.js","pages/Contacts.js"],"sourcesContent":["// export const selectLoading = state => state.contacts.loading;\n\n// export const selectFilter = state => state.contacts.filter;\n\n// export const selectAllContacts = state => state.contacts.items;\n\nexport const getContacts = state => state.contacts.contacts;\nexport const getFilter = state => state.filter.status;\n//new\n// export const getTasks = state => state.tasks.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n","import styled from 'styled-components';\n\nexport const ListContact = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  align-content: center;\n  margin: 10px;\n  gap: 6px;\n  width: 500px;\n  text-align: center;\n  list-style: none;\n  margin: 0 auto;\n`;\n\nexport const Button = styled.button`\n  min-width: 80px;\n  padding: 4px 12px;\n  margin-top: 10px;\n  margin-left: 20px;\n  border: 1px solid #000;\n  border-radius: 6px;\n  text-transform: capitalize;\n  cursor: pointer;\n  :hover,\n  :focus {\n    background-color: yellow;\n    color: black;\n  }\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContacts, fetchContacts } from '../../redux/contacts/operations';\nimport {\n  getContacts,\n  getFilter,\n  getIsLoading,\n  getError,\n} from 'redux/contacts/selectors.js';\nimport { useEffect } from 'react';\nimport { ListContact, Button } from './ContactList.styled';\n\nconst ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filters = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLocaleLowerCase().includes(filters.toLowerCase())\n  );\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ListContact>\n      {isLoading && !error && <p>Request in progress...</p>}\n      {error && <p></p>}\n      {visibleContacts.map(({ id, name, number }) => (\n        <li key={id}>\n          {name}: {number}\n          <Button type=\"button\" onClick={() => dispatch(deleteContacts(id))}>\n            delete\n          </Button>\n        </li>\n      ))}\n    </ListContact>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n\n  align-items: center;\n  flex-direction: column;\n  \n`;\n\nexport const Title2 = styled.h2`\n  display: flex;\n  justify-content: center;\n  color: blue;\n  font-size: 36px;\n`;\n\nexport const Title = styled.h3`\n  display: flex;\n  justify-content: center;\n  margin: 10px 10px;\n`;\n","import React from 'react';\nimport { FilterWrapper, Title, Title2 } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setStatusFilter } from '../redux/filtersSlice';\nimport { nanoid } from 'nanoid';\nimport { getFilter } from '../../redux/contacts/selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filters = useSelector(getFilter);\n  const filterId = nanoid(3);\n\n  const handleChange = e => {\n    dispatch(setStatusFilter(e.target.value)); //передаємо значення у фільтрі\n  };\n  return (\n    <FilterWrapper htmlFor={filterId}>\n      <Title2>Contacts</Title2>\n      <Title>Find contact by name</Title>\n      <label>\n        <input\n          type=\"text\"\n          id={filterId}\n          value={filters}\n          onChange={handleChange}\n        />\n      </label>\n    </FilterWrapper>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  border: 1px solid black;\n  width: 500px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  border-radius: 10px;\n  margin-left: auto;\n  margin-right: auto;\n  box-shadow: rgb(0 1 0) 5px 5px 15px 5px;\n  height: auto;\n  text-align: center;\n  margin-top: 10px;\n  border: 4mm ridge rgba(211, 220, 50, 0.6);\n`;\n","import ContactForm from '../components/ContactList/ContactList';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\n\nimport { Wrapper } from '../components/App.styled';\n\nexport default function Contacts() {\n  return (\n    <>\n      <Wrapper>\n        <ContactForm />\n        <Filter />\n        <ContactList />\n      </Wrapper>\n    </>\n  );\n}\n"],"names":["getContacts","state","contacts","getFilter","filter","status","getIsLoading","isLoading","getError","error","ListContact","styled","Button","useSelector","filters","dispatch","useDispatch","visibleContacts","contact","name","toLocaleLowerCase","includes","toLowerCase","useEffect","fetchContacts","map","id","number","type","onClick","deleteContacts","FilterWrapper","Title2","Title","filterId","nanoid","htmlFor","value","onChange","e","setStatusFilter","target","Wrapper","Contacts"],"sourceRoot":""}