{"version":3,"file":"static/js/128.7a814549.chunk.js","mappings":"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","sources":["components/Fonebook/ContactForm/ContactForm.styled.js","components/Fonebook/Redux/selectors.js","components/Fonebook/Redux/operations.js","components/Fonebook/ContactForm/ContactForm.jsx","components/Fonebook/ContactList/ContactList.styled.js","components/Fonebook/ContactList/ContactList.jsx","components/Fonebook/Filter/Filter.styled.js","components/Fonebook/Redux/filtersSlice.js","components/Fonebook/Filter/Filter.jsx","components/App.styled.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const WrapperForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 300px;\n  height: 250px;\n  border: 2px solid #000;\n  border-radius: 10px;\n  margin: 100px auto 10px;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  text-align: center;\n  font-weight: 700;\n`;\nexport const Input = styled.input`\n  display: block;\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const Button = styled.button`\n  min-width: 150px;\n  padding: 4px 12px;\n  margin-top: 10px;\n  border: 1px solid #000;\n  border-radius: 6px;\n  text-transform: capitalize;\n  cursor: pointer;\n  text-transform: capitalize;\n\n  cursor: pointer;\n  :hover,\n  :focus {\n    background-color: yellow;\n    color: black;\n  }\n`;\n\nexport const Title = styled.h1`\n  display: flex;\n  justify-content: center;\n  color: blue;\n  font-size: 40px;\n  margin-top: -80px;\n`;\n","export const getContacts = state => state.contacts.contacts;\nexport const getFilter = state => state.filter.status;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n\nexport const selectIsLoggedIn = state => state.auth.isLoggedIn;\n\nexport const selectUser = state => state.auth.user;\n\nexport const selectIsRefreshing = state => state.auth.isRefreshing;\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/';\n\n// Utility to add JWT\nconst setAuthHeader = token => {\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n};\n// Utility to remove JWT\nconst clearAuthHeader = () => {\n  axios.defaults.headers.common.Authorization = '';\n};\n\n/*\n * POST @ /users/signup\n * body: { name, email, password }\n */\nexport const register = createAsyncThunk(\n  'auth/register',\n  async (credentials, thunkAPI) => {\n    try {\n      const res = await axios.post('/users/signup', credentials);\n      // After successful registration, add the token to the HTTP header\n      setAuthHeader(res.data.token);\n      return res.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\n/*\n * POST @ /users/login\n * body: { email, password }\n */\nexport const logIn = createAsyncThunk(\n  'auth/login',\n  async (credentials, thunkAPI) => {\n    try {\n      const res = await axios.post('/users/login', credentials);\n      // After successful login, add the token to the HTTP header\n      setAuthHeader(res.data.token);\n      return res.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n/*\n * GET @ /users/current\n * headers: Authorization: Bearer token\n */\nexport const refreshUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    // Reading the token from the state via getState()\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      // If there is no token, exit without performing any request\n      return thunkAPI.rejectWithValue('Unable to fetch user');\n    }\n\n    try {\n      // If there is a token, add it to the HTTP header and perform the request\n      setAuthHeader(persistedToken);\n      const res = await axios.get('/users/me');\n      return res.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\n/*\n * POST @ /users/logout\n * headers: Authorization: Bearer token\n */\nexport const logOut = createAsyncThunk('auth/logout', async (_, thunkAPI) => {\n  try {\n    await axios.post('/users/logout');\n    // After a successful logout, remove the token from the HTTP header\n    clearAuthHeader();\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\n\n// 7 module\n\nconst errorMessage = `Sorry! Something went wrong. Please refresh this page and try again.`;\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchAll',\n  async (_, thunkAPI) => {\n    try {\n      const response = await axios.get('/contacts');\n      return response.data;\n    } catch (e) {\n      return thunkAPI.rejectWithValue(errorMessage);\n    }\n  }\n);\nexport const addContacts = createAsyncThunk(\n  'contacts/addContacts',\n  async ({ name, number }, thunkAPI) => {\n    try {\n      const response = await axios.post('/contacts', { name, number });\n      return response.data;\n    } catch (e) {\n      return thunkAPI.rejectWithValue(errorMessage);\n    }\n  }\n);\n\nexport const deleteContacts = createAsyncThunk(\n  'contacts/deleteContact',\n  async (id, thunkAPI) => {\n    try {\n      const response = await axios.delete(`/contacts/${id}`);\n      return response.data;\n    } catch (e) {\n      return thunkAPI.rejectWithValue(`errorMessage`);\n    }\n  }\n);\n","import { useState } from 'react';\nimport { WrapperForm, Label, Input, Button, Title } from './ContactForm.styled';\nimport { getContacts } from '../Redux/selectors';\n// Импортируем хук\nimport { useDispatch, useSelector } from 'react-redux';\n// Импортируем генератор экшена\n//\nimport { addContacts } from '../Redux/operations';\n\nexport const ContactForm = () => {\n  // Получаем ссылку на функцию отправки экшенов\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n  const contacts = useSelector(getContacts);\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      alert(`${name} is already in contacts`);\n    } else {\n      dispatch(addContacts({ name, number }));\n    }\n    setName('');\n    setNumber('');\n  };\n  return (\n    <WrapperForm>\n      <Title>Phonebook</Title>\n      <form onSubmit={handleSubmit}>\n        <Label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя должно состоять из букв, заглавных\"\n            required\n          />\n        </Label>\n        <Label>\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            value={number}\n            onChange={handleChange}\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          />\n        </Label>\n\n        <Button type=\"submit\">Add contact</Button>\n      </form>\n    </WrapperForm>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ListContact = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  align-content: center;\n  margin: 10px;\n  gap: 6px;\n  width: 500px;\n  text-align: center;\n  list-style: none;\n  margin: 0 auto;\n`;\n\nexport const Button = styled.button`\n  min-width: 80px;\n  padding: 4px 12px;\n  margin-top: 10px;\n  margin-left: 20px;\n  border: 1px solid #000;\n  border-radius: 6px;\n  text-transform: capitalize;\n  cursor: pointer;\n  :hover,\n  :focus {\n    background-color: yellow;\n    color: black;\n  }\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContacts, fetchContacts } from '../Redux/operations';\nimport {\n  getContacts,\n  getFilter,\n  getIsLoading,\n  getError,\n} from '../Redux/selectors';\nimport { useEffect } from 'react';\nimport { ListContact, Button } from './ContactList.styled';\n\nconst ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filters = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLocaleLowerCase().includes(filters.toLowerCase())\n  );\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ListContact>\n      {isLoading && !error && <p>Request in progress...</p>}\n      {error && <p></p>}\n      {visibleContacts.map(({ id, name, number }) => (\n        <li key={id}>\n          {name}: {number}\n          <Button type=\"button\" onClick={() => dispatch(deleteContacts(id))}>\n            delete\n          </Button>\n        </li>\n      ))}\n    </ListContact>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n\n  align-items: center;\n  flex-direction: column;\n  /* position: absolute; */\n`;\n\n// export const labelFilter = styled.label`\n//   /* margin-bottom: 20px; */\n\nexport const Title2 = styled.h2`\n  display: flex;\n  justify-content: center;\n  color: blue;\n  font-size: 36px;\n`;\n\nexport const Title = styled.h3`\n  display: flex;\n  justify-content: center;\n  margin: 10px 10px;\n`;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst filtersSlice = createSlice({\n  name: 'filters',\n  initialState: { status: '' },\n  reducers: {\n    setStatusFilter(state, action) {\n      state.status = action.payload;\n    },\n  },\n});\n\n// Экспортируем генераторы экшенов и редюсер\nexport const { setStatusFilter } = filtersSlice.actions;\nexport const filtersReducer = filtersSlice.reducer;\n","// import React, { Component } from 'react';\nimport React from 'react';\nimport { FilterWrapper, Title, Title2 } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setStatusFilter } from '../Redux/filtersSlice';\nimport { nanoid } from 'nanoid';\nimport { getFilter } from '../Redux/selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filters = useSelector(getFilter);\n  const filterId = nanoid(3);\n\n  const handleChange = e => {\n    dispatch(setStatusFilter(e.target.value)); //передаємо значення у фільтрі\n  };\n  return (\n    <FilterWrapper htmlFor={filterId}>\n      <Title2>Contacts</Title2>\n      <Title>Find contact by name</Title>\n      <label>\n        <input\n          type=\"text\"\n          id={filterId}\n          value={filters}\n          onChange={handleChange}\n        />\n      </label>\n    </FilterWrapper>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  border: 1px solid black;\n  width: 500px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  border-radius: 10px;\n  margin-left: auto;\n  margin-right: auto;\n  box-shadow: rgb(0 1 0) 5px 5px 15px 5px;\n  height: auto;\n  text-align: center;\n  margin-top: 10px;\n  border: 4mm ridge rgba(211, 220, 50, 0.6);\n`;\n","import { ContactForm } from '../components/Fonebook/ContactForm/ContactForm';\nimport ContactList from '../components/Fonebook/ContactList/ContactList';\nimport Filter from '../components/Fonebook/Filter/Filter';\n\nimport { Wrapper } from '../components/App.styled';\n\nexport default function Contacts() {\n  return (\n    <>\n      <Wrapper>\n        <ContactForm />\n        <Filter />\n        <ContactList />\n      </Wrapper>\n    </>\n  );\n}\n"],"names":["WrapperForm","styled","Label","Input","Button","Title","getContacts","state","contacts","getFilter","filter","status","getIsLoading","isLoading","getError","error","axios","setAuthHeader","token","errorMessage","createAsyncThunk","credentials","thunkAPI","res","data","rejectWithValue","message","_","getState","persistedToken","auth","fetchContacts","response","addContacts","name","number","deleteContacts","id","ContactForm","dispatch","useDispatch","useState","setName","setNumber","handleChange","e","currentTarget","value","useSelector","onSubmit","event","preventDefault","some","contact","toLowerCase","alert","type","onChange","pattern","title","required","ListContact","filters","visibleContacts","toLocaleLowerCase","includes","useEffect","map","onClick","FilterWrapper","Title2","filtersSlice","createSlice","initialState","reducers","setStatusFilter","action","payload","actions","reducer","filterId","nanoid","htmlFor","target","Wrapper","Contacts"],"sourceRoot":""}